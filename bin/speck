#!/usr/bin/env sh

set -e ## errexit
set -u ## nounset

IFS='
'
CmdDir="$(cd "$(dirname "$0")" && pwd)"
VerboseFlag=no
DebugFlag=no
ExitStatus=0

: ${SpeckSuiteStyle:=* %s\\n}
: ${SpeckFuncStyle:=        %s}
: ${SpeckOkStatusStyle:=\\r  ok\\n}
: ${SpeckErrorStatusStyle:=\\r  error\\n}
: ${SpeckDumpStyle:=s:^:> :}

before_all() { true; }
before()     { true; }
after()      { true; }
after_all()  { true; }

usage()
{
        echo "Usage: $(basename "$0") [ -v,--verbose ] [ -d,--debug ] [ <file_or_dir> ... ]"
}

run_spec_file()
{(
        set -e

        exit_status=0

        printf -- "$SpeckSuiteStyle" "${spec_file#$CmdDir/}"

        __dir__="$(dirname "$spec_file")"
        __file__="$spec_file"

        . "$spec_file"

        before_all

        set +e
        for spec_func in $(grep -Eo '^(it|test)[_[:alnum:]]+\(\)' "$spec_file"); do
                run_spec_func "${spec_func%%\(*}"
                exit_status=$(expr $exit_status + $?)
        done
        set -e

        after_all

        return $exit_status
)}

run_spec_func()
{(
        set -e

        before

        printf -- "$SpeckFuncStyle" "$1"

        set +e
        output="$(set -e; $1 2>&1)"
        exit_status=$?
        set -e

        if test $exit_status -gt 0; then
                printf -- "$SpeckErrorStatusStyle"
        else
                printf -- "$SpeckOkStatusStyle"
        fi

        after

        if test -n "$output" -a "$VerboseFlag" = 'yes'; then
                dump "$output"
        fi

        return $exit_status
)}

dump()
{
        cat <<OUT | sed -e "$SpeckDumpStyle"
$@
OUT
}

main()
{
        while test $# -gt 0; do
                case $1 in
                        -v|--verbose) VerboseFlag=yes; shift;;
                        -d|--debug)   DebugFlag=yes;   shift;;
                        -*)           usage; exit 1;;
                        --) shift;;
                esac
        done

        if test "$DebugFlag" = 'yes'; then
                set -x ## xtrace
        fi

        if test $# -eq 0; then
                set -- "$CmdDir"
        fi

        set +e
        for suite; do
                for spec_file in $(find -L "$suite" -type f -maxdepth 2 | grep -E '_(spec|test).sh$' | sort -n); do
                        run_spec_file "$spec_file"
                        ExitStatus=$(expr $ExitStatus + $?)
                done
        done
        set -e

        if test $ExitStatus -gt 0; then
                echo "failed ($ExitStatus)"
        fi

        return $ExitStatus
}

main "$@"
